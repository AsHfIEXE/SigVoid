/* frontend/static/styles.css */

/*
  This file is the output of TailwindCSS compilation from 'input.css'.
  It contains all the generated utility classes and your custom CSS.
  DO NOT EDIT THIS FILE DIRECTLY.
  It is regenerated by the 'run.sh' script using `npx tailwindcss`.
*/

/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/ /*
@layer base;
@layer components;
@layer utilities;
*/
/* Define CSS Variables for Theming */
:root {
  /* Main Theme Colors */
  --neon-green: #39ff14;
  --neon-green-hover: #0d8302;
  /* Slightly darker for hover */
  --neon-green-light: #2dd4bf;
  /* Teal for light mode */
  --neon-green-light-hover: #1e9282;
  /* Darker teal for light mode hover */
  /* Text Colors */
  --text-color-dark: #e5e7eb;
  /* Light gray for dark mode main text */
  --text-color-light: #1f2937;
  /* Dark gray for light mode main text */
  --text-color-subtle-dark: #9ca3af;
  /* Gray for subtle text in dark mode */
  --text-color-subtle-light: #4b5563;
  /* Darker gray for subtle text in light mode */
  --heading-color-dark: #f9fafb;
  /* Lighter for main headings in dark mode */
  --heading-color-light: #111827;
  /* Darker for main headings in light mode */
  /* Background Colors */
  --bg-color-dark: #111827;
  /* Very dark blue for dark mode background */
  --bg-color-light: #f3f4f6;
  /* Light gray for light mode background */
  /* Card/Widget Backgrounds */
  --card-bg-dark: #1f2937;
  /* Dark gray for cards in dark mode */
  --card-bg-light: #ffffff;
  /* White for cards in light mode */
  /* Border/Divider Colors */
  --border-color-dark: #374151;
  /* Medium gray for borders in dark mode */
  --border-color-light: #d1d5db;
  /* Light gray for borders in light mode */
  /* Specific UI Element Colors (e.g., input, table headers) */
  --input-bg-dark: #374151;
  --input-text-dark: #ffffff;
  --input-placeholder-dark: #9ca3af;
  --input-bg-light: #f9fafb;
  /* Very light gray for inputs in light mode */
  --input-text-light: #1f2937;
  --input-placeholder-light: #6b7280;
  --table-header-bg-dark: #374151;
  --table-header-bg-light: #e5e7eb;
  --table-row-hover-dark: #374151;
  --table-row-hover-light: #f1f5f9;
  /* Chart Colors (re-exported for consistency - directly used in JS, but good to have here) */
  --chart-red: #DC2626;
  /* Equivalent to red-600 */
  --chart-green: #22C55E;
  /* Equivalent to green-500 */
}
/* Base styles applied to body and globally */
body {
  font-family: 'Inter', ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    'Liberation Mono', 'Courier New', monospace;
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
  transition: background-color 0.4s ease, color 0.4s ease;
  /* Smoother theme transition */
}
/* Dark mode specific styles */
body.dark {
  --tw-bg-opacity: 1;
  /* Ensure Tailwind's opacity is respected */
  background-color: var(--bg-color-dark);
  color: var(--text-color-dark);
}
body.dark .bg-gray-800 {
  background-color: var(--card-bg-dark);
}
body.dark .bg-gray-700 {
  background-color: var(--border-color-dark);
}
body.dark .text-gray-300 {
  color: var(--text-color-subtle-dark);
}
body.dark .text-neon-green {
  color: var(--neon-green);
}
body.dark .bg-neon-green {
  background-color: var(--neon-green);
}
body.dark .hover\:bg-green-400:hover {
  /* Custom hover for neon green buttons */
  background-color: var(--neon-green-hover);
}
body.dark .focus\:ring-neon-green:focus {
  box-shadow: 0 0 0 3px rgba(57, 255, 20, 0.5);
  /* Stronger glow for focus */
}
body.dark input,
body.dark textarea {
  background-color: var(--input-bg-dark);
  color: var(--input-text-dark);
  border: none;
}
body.dark input::placeholder,
body.dark textarea::placeholder {
  color: var(--input-placeholder-dark);
}
body.dark table thead th {
  background-color: var(--table-header-bg-dark);
  color: var(--text-color-subtle-dark);
}
body.dark table tbody tr.hover\:bg-gray-700\/50:hover {
  background-color: var(--table-row-hover-dark);
}
body.dark .border-gray-700 {
  border-color: var(--border-color-dark);
}
body.dark .dark\:border-gray-700 {
  /* Explicit for header border */
  border-color: var(--border-color-dark);
}
body.dark .dark\:text-gray-100 {
  /* Explicit for section headers */
  color: var(--heading-color-dark);
}
/* Light mode specific styles */
body.light {
  background-color: var(--bg-color-light);
  color: var(--text-color-light);
}
body.light .bg-gray-800 {
  background-color: var(--card-bg-light);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.08);
  /* Deeper shadow for light mode cards */
}
body.light .bg-gray-700 {
  background-color: var(--border-color-light);
}
body.light .text-gray-300 {
  color: var(--text-color-subtle-light);
}
body.light .text-neon-green {
  color: var(--neon-green-light);
}
body.light .bg-neon-green {
  background-color: var(--neon-green-light);
}
body.light .hover\:bg-green-400:hover {
  /* Custom hover for neon green buttons */
  background-color: var(--neon-green-light-hover);
}
body.light .focus\:ring-neon-green:focus {
  box-shadow: 0 0 0 3px rgba(45, 212, 191, 0.5);
  /* Stronger glow for focus */
}
body.light input,
body.light textarea {
  background-color: var(--input-bg-light);
  color: var(--input-text-light);
  border: 1px solid var(--border-color-light);
}
body.light input::placeholder,
body.light textarea::placeholder {
  color: var(--input-placeholder-light);
}
body.light table thead th {
  background-color: var(--table-header-bg-light);
  color: var(--text-color-light);
}
body.light table tbody tr.hover\:bg-gray-700\/50:hover {
  background-color: var(--table-row-hover-light);
}
body.light .border-gray-700 {
  /* Border color for light mode */
  border-color: var(--border-color-light);
}
body.light .light\:border-gray-300 {
  /* Explicit for header border */
  border-color: var(--border-color-light);
}
body.light .light\:text-gray-900 {
  /* Explicit for section headers */
  color: var(--heading-color-light);
}
/* General common styles applied regardless of theme, but might pick up theme-vars */
.text-neon-green {
  color: var(--neon-green);
}
.bg-neon-green {
  background-color: var(--neon-green);
}
/* Animations */
.animate-pulse {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}
.animate-fade-in {
  animation: fadeIn 0.3s ease-out;
}
.animate-fade-in-slow {
  /* For title */
  animation: fadeIn 0.8s ease-out;
}
.animate-dot-glow {
  /* For high anomaly indicator */
  animation: dotGlow 1.5s ease-in-out infinite alternate;
}
@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes dotGlow {
  0% {
    transform: scale(1);
    opacity: 1;
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
  }
  50% {
    transform: scale(1.2);
    opacity: 0.8;
    box-shadow: 0 0 8px 4px rgba(239, 68, 68, 0.4);
  }
  100% {
    transform: scale(1);
    opacity: 1;
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
  }
}
/* Widget drag handle/cursor */
.widget {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  cursor: grab;
  box-sizing: border-box;
  flex: 1 1 calc(50% - 1.5rem);
  max-width: calc(50% - 1.5rem);
  min-width: 300px;
  transform: translateZ(0);
  /* Enable hardware acceleration */
}
/* New class for card base styling */
.widget-card {
  transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
}
.widget-card:hover:not(.dragging) {
  /* No hover effect when dragging */
  transform: translateY(-5px);
  /* Subtle lift */
  box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
  /* Deeper shadow on hover */
}
/* When actively dragging */
.widget.dragging {
  cursor: grabbing;
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
  /* Stronger shadow when dragging */
  transform: scale(1.02);
  /* Slightly lift */
  z-index: 1000;
}
/* Input & Button general focus styles (overridden by theme-specific above if needed) */
input,
button,
textarea {
  transition: all 0.2s ease;
  border: 1px solid transparent;
  /* Default transparent border for consistent styling */
}
input:focus,
button:focus,
textarea:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--neon-green);
  border-color: transparent;
  /* Keep border transparent to let ring show */
}
/* Replicate Tailwind's ring effect for focus */
.focus\:ring-neon-green:focus {
  --tw-ring-color: var(--neon-green);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}
/* Custom range input styling */
input[type='range'] {
  -webkit-appearance: none;
  appearance: none;
  height: 10px;
  /* Thicker track */
  background: var(--input-bg-dark);
  /* Track color, adapts to theme */
  border-radius: 5px;
  outline: none;
}
input[type='range']::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 26px;
  /* Larger thumb */
  height: 26px;
  background: var(--neon-green);
  /* Thumb color, adapts to theme */
  border-radius: 50%;
  cursor: pointer;
  margin-top: -8px;
  /* Adjust thumb position relative to track */
  box-shadow: 0 0 0 4px rgba(57, 255, 20, 0.3);
  /* Softer, larger glow */
  transition: background 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
input[type='range']::-moz-range-thumb {
  width: 26px;
  height: 26px;
  background: var(--neon-green);
  border-radius: 50%;
  cursor: pointer;
  box-shadow: 0 0 0 4px rgba(57, 255, 20, 0.3);
  transition: background 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}
/* Hover/active states for thumb */
input[type='range']::-webkit-slider-thumb:hover,
input[type='range']::-moz-range-thumb:hover {
  background: var(--neon-green-hover);
  /* Darker neon green on hover */
  box-shadow: 0 0 0 6px rgba(57, 255, 20, 0.4);
  /* Stronger glow on hover */
}
/* Custom Scrollbar for better minimalism */
.scrollbar-thin {
  scrollbar-width: thin;
  /* Firefox */
  scrollbar-color: var(--border-color-dark) var(--card-bg-dark);
  /* thumb track */
}
.scrollbar-thin::-webkit-scrollbar {
  width: 8px;
  /* Width for vertical scrollbar */
  height: 8px;
  /* Height for horizontal scrollbar */
}
.scrollbar-thin::-webkit-scrollbar-track {
  background: var(--card-bg-dark);
  /* Track color */
  border-radius: 10px;
}
.scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: var(--border-color-dark);
  /* Thumb color */
  border-radius: 10px;
  border: 2px solid var(--card-bg-dark);
  /* Padding around thumb */
}
/* Light mode scrollbar adaptation */
body.light .scrollbar-thin {
  scrollbar-color: var(--border-color-light) var(--card-bg-light);
}
body.light .scrollbar-thin::-webkit-scrollbar-track {
  background: var(--card-bg-light);
}
body.light .scrollbar-thin::-webkit-scrollbar-thumb {
  background-color: var(--border-color-light);
  border: 2px solid var(--card-bg-light);
}
/* Loading Spinner */
.loader {
  border: 8px solid;
  /* Light gray border */
  border-top: 8px solid;
  /* Green border on top */
  -webkit-animation: spin 2s linear infinite;
  /* Safari */
  animation: spin 2s linear infinite;
}
@-webkit-keyframes spin {
  0% {
    -webkit-transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(360deg);
  }
}
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
/* These are the Tailwind Base, Components, and Utilities layers */
/* They are generated by TailwindCSS and should not be manually modified */
/* Base Layer (normalize.css + Tailwind's reset) */
*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}
::before,
::after {
  --tw-content: '';
}
html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  font-family: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
  /* 3 */
  font-feature-settings: normal;
  /* 3 */
  font-variation-settings: normal;
  /* 3 */
}
body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}
hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}
abbr:where([title]) {
  text-decoration: underline dotted;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}
a {
  color: inherit;
  text-decoration: inherit;
}
b,
strong {
  font-weight: bolder;
}
code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    'Liberation Mono', 'Courier New', monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 2 */
  font-size: 1em;
  /* 3 */
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sub {
  bottom: -0.25em;
}
sup {
  top: -0.5em;
}
table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 2 */
  font-variation-settings: inherit;
  /* 2 */
  font-size: 100%;
  /* 3 */
  font-weight: inherit;
  /* 3 */
  line-height: inherit;
  /* 3 */
  color: inherit;
  /* 3 */
  margin: 0;
  /* 4 */
  padding: 0;
  /* 5 */
}
button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}
:-moz-focusring {
  outline: auto;
}
:-moz-ui-invalid {
  box-shadow: none;
}
progress {
  vertical-align: baseline;
}
::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}
[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}
::-webkit-search-decoration {
  -webkit-appearance: none;
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}
summary {
  display: list-item;
}
blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}
fieldset {
  margin: 0;
  padding: 0;
}
legend {
  padding: 0;
}
ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}
textarea {
  resize: vertical;
}
input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}
button,
[role='button'] {
  cursor: pointer;
}
:disabled {
  cursor: default;
}
img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}
img,
video {
  max-width: 100%;
  height: auto;
}
[hidden] {
  display: none;
}
/* Components Layer */
/* No custom components defined in input.css */
/* Utilities Layer */
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}
.left-0 {
  left: 0px;
}
.right-4 {
  right: 1rem;
}
.right-6 {
  right: 1.5rem;
}
.right-8 {
  right: 2rem;
}
.top-4 {
  top: 1rem;
}
.top-6 {
  top: 1.5rem;
}
.bottom-4 {
  bottom: 1rem;
}
.bottom-6 {
  bottom: 1.5rem;
}
.bottom-8 {
  bottom: 2rem;
}
.inset-y-0 {
  top: 0px;
  bottom: 0px;
}
.ml-1 {
  margin-left: 0.25rem;
}
.ml-2 {
  margin-left: 0.5rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mb-3 {
  margin-bottom: 0.75rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.mb-5 {
  margin-bottom: 1.25rem;
}
.mb-6 {
  margin-bottom: 1.5rem;
}
.mb-8 {
  margin-bottom: 2rem;
}
.mb-10 {
  margin-bottom: 2.5rem;
}
.mt-1 {
  margin-top: 0.25rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-6 {
  margin-top: 1.5rem;
}
.mt-8 {
  margin-top: 2rem;
}
.mr-2 {
  margin-right: 0.5rem;
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x: 0.5rem;
  margin-right: calc(0.5rem * var(--tw-space-x));
  margin-left: calc(0.5rem * var(--tw-space-x));
}
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x: 0.75rem;
  margin-right: calc(0.75rem * var(--tw-space-x));
  margin-left: calc(0.75rem * var(--tw-space-x));
}
.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x: 1rem;
  margin-right: calc(1rem * var(--tw-space-x));
  margin-left: calc(1rem * var(--tw-space-x));
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y: 0.5rem;
  margin-top: calc(0.5rem * var(--tw-space-y));
  margin-bottom: calc(0.5rem * var(--tw-space-y));
}
.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y: 0.75rem;
  margin-top: calc(0.75rem * var(--tw-space-y));
  margin-bottom: calc(0.75rem * var(--tw-space-y));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y: 1rem;
  margin-top: calc(1rem * var(--tw-space-y));
  margin-bottom: calc(1rem * var(--tw-space-y));
}
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y: 1.5rem;
  margin-top: calc(1.5rem * var(--tw-space-y));
  margin-bottom: calc(1.5rem * var(--tw-space-y));
}
.space-y-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y: 2.5rem;
  margin-top: calc(2.5rem * var(--tw-space-y));
  margin-bottom: calc(2.5rem * var(--tw-space-y));
}
.p-2 {
  padding: 0.5rem;
}
.p-3 {
  padding: 0.75rem;
}
.p-3\.5 {
  padding: 0.875rem;
}
.p-4 {
  padding: 1rem;
}
.p-5 {
  padding: 1.25rem;
}
.p-6 {
  padding: 1.5rem;
}
.p-8 {
  padding: 2rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.py-2\.5 {
  padding-top: 0.625rem;
  padding-bottom: 0.625rem;
}
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.py-3\.5 {
  padding-top: 0.875rem;
  padding-bottom: 0.875rem;
}
.px-2\.5 {
  padding-left: 0.625rem;
  padding-right: 0.625rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.h-2 {
  height: 0.5rem;
}
.h-2\.5 {
  height: 0.625rem;
}
.h-20 {
  height: 5rem;
}
.h-56 {
  height: 14rem;
}
.h-64 {
  height: 16rem;
}
.h-72 {
  height: 18rem;
}
.w-2 {
  width: 0.5rem;
}
.w-2\.5 {
  width: 0.625rem;
}
.w-20 {
  width: 5rem;
}
.w-64 {
  width: 16rem;
}
.w-full {
  width: 100%;
}
.max-h-24 {
  max-height: 6rem;
}
.max-h-32 {
  max-height: 8rem;
}
.max-w-xl {
  max-width: 36rem;
}
.flex-grow {
  flex-grow: 1;
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-end {
  justify-content: flex-end;
}
.gap-4 {
  gap: 1rem;
}
.gap-6 {
  gap: 1.5rem;
}
.gap-8 {
  gap: 2rem;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.overflow-x-auto {
  overflow-x: auto;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-lg {
  border-radius: 0.5rem;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-xl {
  border-radius: 0.75rem;
}
.rounded-tl-lg {
  border-top-left-radius: 0.5rem;
}
.rounded-tr-lg {
  border-top-right-radius: 0.5rem;
}
.border {
  border-width: 1px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-l {
  border-left-width: 1px;
}
.border-r {
  border-right-width: 1px;
}
.border-none {
  border-style: none;
}
.border-opacity-20 {
  border-color: rgb(255 255 255 / 0.2);
}
.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity));
}
.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
.bg-gray-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}
.bg-gray-700\/50 {
  background-color: rgb(55 65 81 / 0.5);
}
.bg-gray-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}
.bg-gray-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}
.bg-green-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity));
}
.bg-neon-green {
  background-color: var(--neon-green);
}
.bg-opacity-50 {
  --tw-bg-opacity: 0.5;
}
.bg-opacity-70 {
  --tw-bg-opacity: 0.7;
}
.bg-opacity-80 {
  --tw-bg-opacity: 0.8;
}
.bg-red-400 {
  --tw-bg-opacity: 1;
  background-color: rgb(248 113 113 / var(--tw-bg-opacity));
}
.bg-red-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}
.bg-red-900\/50 {
  background-color: rgb(127 29 29 / 0.5);
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.bg-yellow-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(217 119 6 / var(--tw-bg-opacity));
}
.py-3\.5 {
  padding-top: 0.875rem;
  padding-bottom: 0.875rem;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-5xl {
  font-size: 3rem;
  line-height: 1;
}
.text-6xl {
  font-size: 3.75rem;
  line-height: 1;
}
.font-bold {
  font-weight: 700;
}
.font-extrabold {
  font-weight: 800;
}
.font-semibold {
  font-weight: 600;
}
.uppercase {
  text-transform: uppercase;
}
.tracking-wider {
  letter-spacing: 0.05em;
}
.tracking-widest {
  letter-spacing: 0.1em;
}
.leading-relaxed {
  line-height: 1.625;
}
.text-gray-100 {
  --tw-text-opacity: 1;
  color: rgb(249 250 251 / var(--tw-text-opacity));
}
.text-gray-200 {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}
.text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}
.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}
.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}
.text-green-400 {
  --tw-text-opacity: 1;
  color: rgb(74 222 128 / var(--tw-text-opacity));
}
.text-neon-green {
  color: var(--neon-green);
}
.text-red-400 {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.shadow-2xl {
  --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  --tw-shadow-colored: 0 25px 50px -12px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-3xl {
  --tw-shadow: 0 35px 60px -15px rgb(0 0 0 / 0.3);
  --tw-shadow-colored: 0 35px 60px -15px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.transition-colors {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 300ms;
}
.duration-150 {
  transition-duration: 150ms;
}
.duration-200 {
  transition-duration: 200ms;
}
.hover\:bg-green-400:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(74 222 128 / var(--tw-bg-opacity));
}
.hover\:bg-gray-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}
.hover\:bg-gray-700\/50:hover {
  background-color: rgb(55 65 81 / 0.5);
}
.hover\:border-green-400\/50:hover {
  border-color: rgb(74 222 128 / 0.5);
}
.hover\:text-green-400:hover {
  --tw-text-opacity: 1;
  color: rgb(74 222 128 / var(--tw-text-opacity));
}
.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.hover\:scale-105:hover {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@media (min-width: 768px) {
  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .md\:space-y-0 {
    --tw-space-y: 0px;
    margin-top: calc(0px * var(--tw-space-y));
    margin-bottom: calc(0px * var(--tw-space-y));
  }
}
@media (min-width: 1024px) {
  .lg\:hidden {
    display: none;
  }
  .lg\:ml-64 {
    margin-left: 16rem;
  }
  .lg\:translate-x-0 {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y))
      rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
      scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }
}